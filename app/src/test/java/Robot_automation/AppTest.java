/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package Robot_automation;

import java.time.Duration; // Import Duration class for setting timeouts

import org.openqa.selenium.By; // Import By class for locating web elements
import org.openqa.selenium.JavascriptExecutor; // Import JavascriptExecutor for executing JavaScript code
import org.openqa.selenium.WebElement; // Import WebElement class for interacting with web elements
import org.openqa.selenium.chrome.ChromeDriver; // Import ChromeDriver for controlling the Chrome browser
import org.testng.Assert; // Import Assert class for test assertions
import org.testng.annotations.*; // Import TestNG annotations
import java.awt.*; // Import AWT classes for using the Robot class
import java.awt.datatransfer.StringSelection; // Import StringSelection for copying strings to the clipboard
import java.awt.event.KeyEvent; // Import KeyEvent class for keyboard event handling

public class AppTest {
    ChromeDriver driver; // Declare the ChromeDriver object

    @BeforeMethod(alwaysRun = true, description = "Initiate The Browser")
    public void OpenBrowser() {
        // Initialize the ChromeDriver instance
        driver = new ChromeDriver();
        // Maximize the browser window
        driver.manage().window().maximize();
        // Set an implicit wait timeout of 30 seconds
        driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(30));
    }

    @Test(enabled = true, description = "Verify that text file has been uploaded from local using robot class")
    @Parameters({"filepath"}) // Parameterize the test method with a filepath parameter
    public void Robot_Class_Related_TestCase01(String filepathInputParameter) {
        try {
            // Navigate to the pdffiller website
            driver.get("https://www.pdffiller.com/");
            // Scroll down the page by 300 pixels using JavaScript
            JavascriptExecutor js = (JavascriptExecutor) driver;
            js.executeScript("window.scrollBy(0,300)", "");
            // Locate the file upload button and click it
            WebElement element = driver.findElement(By.xpath("//button[contains(@class,'Zlc8t')]"));
            element.click();
            // Pause the execution for 3 seconds
            Thread.sleep(3000);
            // Create an instance of the Robot class to handle keyboard and mouse events
            Robot robot = new Robot();
            // Copy the file path to the system clipboard
            StringSelection filePath = new StringSelection(filepathInputParameter);
            Toolkit.getDefaultToolkit().getSystemClipboard().setContents(filePath, null);
            // Simulate pressing CTRL+V to paste the file path
            robot.keyPress(KeyEvent.VK_CONTROL);
            robot.keyPress(KeyEvent.VK_V);
            robot.keyRelease(KeyEvent.VK_V);
            robot.keyRelease(KeyEvent.VK_CONTROL);
            // Simulate pressing ENTER to confirm the file selection
            robot.keyPress(KeyEvent.VK_ENTER);
            robot.keyRelease(KeyEvent.VK_ENTER);
            // Locate the cancel button on the file uploader dialog and verify it is displayed and enabled
            WebElement element2 = driver.findElement(By.xpath("//button[@data-qa-tag='uploader-message-cancel-button']"));
            Assert.assertTrue(element2.isDisplayed() && element2.isEnabled());
            // Click the cancel button to close the file uploader dialog
            element2.click();
            // Pause the execution for 7 seconds
            Thread.sleep(7000);
            // Locate another button on the page and verify it is displayed and enabled
            WebElement element3 = driver.findElement(By.xpath("//button[contains(@class,'3dU8R _1UobI')]"));
            Assert.assertTrue(element3.isDisplayed() && element3.isEnabled());
            // Click the button
            element3.click();
            // Pause the execution for 5 seconds
            Thread.sleep(5000);
            // Locate the PDF choice button and verify it is displayed and enabled
            WebElement element4 = driver.findElement(By.xpath("//button[contains(@data-qa-tag,'SIMPLE_CHOICE_PDF')]"));
            Assert.assertTrue(element4.isDisplayed() && element4.isEnabled());
            // Click the PDF choice button
            element4.click();

        } catch (Exception e) {
            // Handle any exceptions that occur during the test execution
            e.printStackTrace();
        }
    }

    @AfterMethod(alwaysRun = true, description = "Close The Browser")
    public void ExitBrowser() {
        // Close the browser and quit the WebDriver session
        driver.quit();
    }
}